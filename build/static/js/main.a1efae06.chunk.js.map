{"version":3,"sources":["services/persons.js","components/Person.js","components/Persons.js","components/PersonQuery.js","components/Message.js","components/ErrorMessage.js","App.js","index.js"],"names":["baseUrl","handleRequest","request","then","response","data","axios","get","newObject","post","id","delete","put","Person","person","deletePerson","name","number","onClick","Persons","persons","map","PersonQuery","query","value","onChange","handler","Message","message","className","ErrorMessage","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","newMessage","setNewMessage","newErrorMessage","setNewErrorMessage","hook","console","log","personService","initialPersons","useEffect","length","addPerson","returnedPerson","concat","messageTimer","catch","error","errorMessage","errorMessageTimer","updateNumber","window","confirm","find","p","updatedPerson","personsToShow","filter","toLowerCase","includes","queries","event","target","setTimeout","onSubmit","preventDefault","notNameDuplicate","every","notNumDuplicate","alert","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1efae06.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst handleRequest = (request) => {\n    return request.then(response => response.data)\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return handleRequest(request)\n}\n\nconst addNew = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return handleRequest(request)\n}\n\nconst deleteObject = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return handleRequest(request)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return handleRequest(request)\n}\n\nexport default {\n    getAll,\n    addNew,\n    deleteObject,\n    update\n}\n","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n    return (\n      <p>{person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button></p>\n    )\n  }\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, deletePerson}) => {\n    return persons.map(person =>\n      <Person\n        key={person.name}\n        person={person}\n        deletePerson={deletePerson}/>\n    )\n  }\n\nexport default Persons","import React from \"react\";\n\nconst PersonQuery = ({query}) => {\n    return (\n      <div>\n         {query.name} <input\n        value={query.value}\n        onChange={query.handler}/>\n      </div>\n    )\n  }\n\nexport default PersonQuery","import React from 'react'\n\nconst Message = ({ message }) => {\n    if (message === null) {\n        return null\n    } \n    return (\n        <div className='message'>\n            {message}\n        </div>\n    )\n}\n\nexport default Message","import React from 'react'\n\nconst ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    } \n    return (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorMessage","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Persons from './components/Persons'\nimport PersonQuery from './components/PersonQuery'\nimport Message from './components/Message'\nimport ErrorMessage from './components/ErrorMessage'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ newMessage, setNewMessage ] = useState(null)\n  const [ newErrorMessage, setNewErrorMessage ] = useState(null)\n\n  const hook = () => {\n    console.log('effect is being used')\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('persons fetched')\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(hook, [])\n  console.log('render', persons.length, 'persons')\n\n  const newInformation = (event) => {\n    event.preventDefault()\n    console.log('submit clicked', event.target)\n\n    const notNameDuplicate = persons.every((person) => newName !== person.name)\n\n    const notNumDuplicate = persons.every((person) => newNumber !== person.number)\n\n    if (notNameDuplicate && notNumDuplicate ) {\n      addPerson()\n    } else if (notNameDuplicate === false) {\n      console.log('Name', newName, 'is a duplicate')\n      updateNumber()\n    } else {\n      console.log('Number', newNumber, 'is a duplicate')\n      window.alert(`Number ${newNumber} is already added to the phonebook`)\n    }\n  }\n\n  const addPerson = () => {\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    personService\n        .addNew(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNewMessage(`Added ${newName}`)\n          messageTimer()\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          const errorMessage = error.response.data.error\n          setNewErrorMessage(\n            errorMessage\n          )\n          errorMessageTimer()\n        })\n  }\n\n  const handleNewName = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const updateNumber = () => {\n    const confirmation = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n    if (confirmation) {\n      const person = persons.find(p => p.name === newName)\n      console.log(`update number of ${person.id}`)\n      const updatedPerson = {...person, number: newNumber}\n      personService\n        .update(person.id, updatedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNewMessage(`Updated ${person.name}'s number`)\n          messageTimer()\n        })\n        .catch(error => {\n          console.log(`Error:`)\n          console.log(error.response.data)\n          const errorMessage = error.response.data.error || `Information of ${newName} has already been removed from the server`\n          setNewErrorMessage(\n            errorMessage\n          )\n          errorMessageTimer()\n        })\n        .then(hook)\n    } else {\n      console.log(`don't update anything`)\n    }\n  }\n\n  const personsToShow = persons.filter(person => \n    person.name.toLowerCase().includes(newSearch.toLowerCase())\n  )\n\n  const searchNames = (event) => {\n    console.log(event.target.value)\n    setNewSearch(event.target.value)\n  }\n\n  const queries = [\n    { name: 'name', value: newName, handler: handleNewName },\n    { name: 'number', value: newNumber, handler: handleNewNumber}\n  ]\n\n  const deletePerson = (person) => {\n    const confirmation = window.confirm(`Delete ${person.name}?`)\n    if (confirmation) {\n      console.log(`Delete person ${person.id}`)\n      personService\n        .deleteObject(person.id)\n        .then(hook)\n      setNewMessage(`Deleted ${person.name}`)\n      messageTimer()\n    } else {\n      console.log('Delete no one')\n    }\n  }\n\n  const messageTimer = () => {\n    setTimeout(() => setNewMessage(null), 3000)\n  }\n\n  const errorMessageTimer = () => {\n    setTimeout(() => setNewErrorMessage(null), 5000)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Message message={newMessage}/>\n      <ErrorMessage message={newErrorMessage}/>\n      <form>\n        show names with \n        <input\n        value={newSearch}\n        onChange={searchNames}\n        />\n      </form>\n      <h2>Add a new contact</h2>\n      <form onSubmit={newInformation}>\n        {queries.map(query =>\n          <PersonQuery key={query.name} query={query}/>)}\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {<Persons\n        persons={personsToShow}\n        deletePerson={deletePerson}/>}\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}